{
  parserClass="org.mvnsearch.plugins.wit.lang.parser.WitParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Wit"
  psiImplClassSuffix="Impl"
  psiPackage="org.mvnsearch.plugins.wit.lang.psi"
  psiImplPackage="org.mvnsearch.plugins.wit.lang.psi.impl"

  elementTypeHolderClass="org.mvnsearch.plugins.wit.lang.psi.WitTypes"
  elementTypeClass="org.mvnsearch.plugins.wit.lang.psi.WitElementType"
  tokenTypeClass="org.mvnsearch.plugins.wit.lang.psi.WitTokenType"

  tokens=[
              LBRACE      =  '{'
              RBRACE      =  '}'
              LBRACK      =  '['
              RBRACK      =  ']'
              LPAREN      =  '('
              RPAREN      =  ')'
              COLON       =  ':'
              COMMA       =  ','
              SEMICOLON   =  ';'
              EQ          =  '='
              EXCL        =  '!'
              EXCLEQ      =  '!='
              EQEQ        =  '=='
              PLUS        =  '+'
              MINUS       =  '-'
              MUL         =  '*'
              DIV         =  '/'
              REM         =  '%'
              OR          =  '|'
              LT          =  '<'
              LT_EQ       =  '<='
              GT          =  '>'
              GT_EQ       =  '>='
              DOT         =  '.'
              DOTDOT      =  '..'
              ARROW       =  '->'
              AT          =  '@'
              DOLLAR      =  '$'
              IDENTIFIER = 'regexp:[a-zA-Z0-9][_a-zA-Z0-9]*'
              COMMENT = 'regexp:("//")[^\n]*'
              DOC_COMMENT = 'regexp:("///")[^\n]*'
              BLOCK_COMMENT_START = '/*'
              BLOCK_COMMENT_END = '*/'
              INTEGER_LITERAL = 'regexp:\d+'
              DOUBLE_LITERAL = 'regexp:(\d[\d_]*)(\.)(\d[\d_]*)'
              CHAR_LITERAL = "regexp:('[^\\'\r\n]*')"
              STRING_LITERAL = 'regexp:("[^\\"\r\n]*")'
              RESERVED_KEYWORD = 'reserved_keyword'
              IDENTIFIER = 'regexp:[a-z][_a-zA-Z0-9-]*'
          ]
}



WitDocument ::= any*

private recover ::= !(any)
private any ::= !<<eof>> ( interface-item | world-item | NEW_LINE | DOC_COMMENT | COMMENT  ) {pin=1 recoverWhile=recover}

world-item ::= 'default'? 'world' IDENTIFIER '{'  '}'

interface-item ::= 'interface' IDENTIFIER '{'  '}'



